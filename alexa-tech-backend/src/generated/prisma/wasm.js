
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastAccess: 'lastAccess',
  permissions: 'permissions'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  action: 'action',
  userId: 'userId',
  targetId: 'targetId',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.SystemEventScalarFieldEnum = {
  id: 'id',
  type: 'type',
  details: 'details',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  tipoEntidad: 'tipoEntidad',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  nombres: 'nombres',
  apellidos: 'apellidos',
  razonSocial: 'razonSocial',
  email: 'email',
  telefono: 'telefono',
  direccion: 'direccion',
  ciudad: 'ciudad',
  usuarioCreacion: 'usuarioCreacion',
  usuarioActualizacion: 'usuarioActualizacion',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.TipoEntidad = exports.$Enums.TipoEntidad = {
  Cliente: 'Cliente',
  Proveedor: 'Proveedor',
  Ambos: 'Ambos'
};

exports.Prisma.ModelName = {
  User: 'User',
  AuditLog: 'AuditLog',
  UserActivity: 'UserActivity',
  SystemEvent: 'SystemEvent',
  Client: 'Client'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\nesto\\OneDrive\\Escritorio\\PROYECTO SOTFWARE\\ingenieria-software\\alexa-tech-backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\nesto\\OneDrive\\Escritorio\\PROYECTO SOTFWARE\\ingenieria-software\\alexa-tech-backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Enum para el tipo de entidad comercial\nenum TipoEntidad {\n  Cliente\n  Proveedor\n  Ambos\n}\n\nmodel User {\n  id          String    @id @default(cuid())\n  email       String    @unique\n  username    String    @unique\n  password    String\n  firstName   String\n  lastName    String\n  isActive    Boolean   @default(true)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  lastAccess  DateTime?\n  permissions String[]  @default([])\n\n  // Relaciones\n  auditLogs      AuditLog[]\n  userActivities UserActivity[]\n  clientsCreated Client[]       @relation(\"ClientCreatedBy\")\n  clientsUpdated Client[]       @relation(\"ClientUpdatedBy\")\n\n  @@map(\"users\")\n}\n\nmodel AuditLog {\n  id        String   @id @default(cuid())\n  action    String // LOGIN, CREATE_USER, UPDATE_USER, DELETE_USER, etc.\n  userId    String? // Usuario que realizó la acción\n  targetId  String? // ID del recurso afectado\n  details   String? // Detalles adicionales de la acción\n  ipAddress String? // Dirección IP del usuario\n  userAgent String? // User agent del navegador\n  createdAt DateTime @default(now())\n\n  // Relación con usuario\n  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@map(\"audit_logs\")\n}\n\nmodel UserActivity {\n  id        String   @id @default(cuid())\n  userId    String // Usuario que realizó la actividad\n  action    String // Tipo de actividad\n  details   String? // Detalles de la actividad\n  ipAddress String? // Dirección IP\n  userAgent String? // User agent del navegador\n  createdAt DateTime @default(now())\n\n  // Relación con usuario\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_activities\")\n}\n\nmodel SystemEvent {\n  id        String   @id @default(cuid())\n  type      String // SYSTEM_START, DATABASE_BACKUP, ERROR, etc.\n  details   String? // Detalles del evento\n  metadata  Json? // Metadatos adicionales en formato JSON\n  createdAt DateTime @default(now())\n\n  @@map(\"system_events\")\n}\n\nmodel Client {\n  id              String      @id @default(cuid())\n  // Tipo de entidad comercial (Cliente, Proveedor o Ambos)\n  tipoEntidad     TipoEntidad @default(Cliente)\n  tipoDocumento   String // DNI, RUC, CE\n  numeroDocumento String      @unique // Número de documento único\n\n  // Campos para DNI y CE (Personas Naturales)\n  nombres   String? // Nombres (solo para DNI/CE)\n  apellidos String? // Apellidos (solo para DNI/CE)\n\n  // Campos para RUC (Personas Jurídicas)\n  razonSocial String? // Razón Social (solo para RUC)\n\n  // Campos comunes\n  email     String @unique // Email único del cliente\n  telefono  String // Teléfono de contacto\n  direccion String // Dirección completa\n  ciudad    String // Ciudad de residencia\n\n  // Auditoría de creación/actualización\n  usuarioCreacion      String?\n  usuarioActualizacion String?\n  createdBy            User?   @relation(\"ClientCreatedBy\", fields: [usuarioCreacion], references: [id], onDelete: SetNull)\n  updatedBy            User?   @relation(\"ClientUpdatedBy\", fields: [usuarioActualizacion], references: [id], onDelete: SetNull)\n\n  isActive  Boolean  @default(true) // Soft delete\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"commercial_entities\")\n}\n",
  "inlineSchemaHash": "e6bcc4013dca022aac747adb7e9c35f113881d98e04b10d9bd9b9373299afdd7",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastAccess\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"userActivities\",\"kind\":\"object\",\"type\":\"UserActivity\",\"relationName\":\"UserToUserActivity\"},{\"name\":\"clientsCreated\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientCreatedBy\"},{\"name\":\"clientsUpdated\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientUpdatedBy\"}],\"dbName\":\"users\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"UserActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserActivity\"}],\"dbName\":\"user_activities\"},\"SystemEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"system_events\"},\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipoEntidad\",\"kind\":\"enum\",\"type\":\"TipoEntidad\"},{\"name\":\"tipoDocumento\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numeroDocumento\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombres\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellidos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"razonSocial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ciudad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioCreacion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioActualizacion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientCreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientUpdatedBy\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"commercial_entities\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

